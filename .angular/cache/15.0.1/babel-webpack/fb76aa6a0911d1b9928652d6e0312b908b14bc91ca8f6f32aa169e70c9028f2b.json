{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(api, formBilder, router) {\n    this.api = api;\n    this.formBilder = formBilder;\n    this.router = router;\n    this.loginForm = formBilder.group({\n      Email: ['', [Validators.required]],\n      Password: ['', [Validators.required]]\n    });\n  }\n  get Email() {\n    return this.loginForm.get('Email');\n  }\n  get Password() {\n    return this.loginForm.get('Password');\n  }\n  ngOnInit() {}\n  login() {\n    const {\n      Email,\n      Password\n    } = this.loginForm.value;\n    const loginObj = {\n      Email: Email || \"\",\n      Password: Password || \"\"\n    };\n    this.api.post('User/Admin/Login', loginObj).subscribe({\n      next: value => {\n        this.UserData = value;\n        localStorage.setItem('token', this.UserData.AccessToken);\n        localStorage.setItem('_id', this.UserData._id);\n        localStorage.setItem('FirstName', this.UserData.FirstName);\n        localStorage.setItem('Email', this.UserData._id);\n        this.router.navigate(['/Elabd/home']);\n      },\n      error: msg => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Incorrect Infromation Try Again'\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 10,\n    consts: [[1, \"container\", \"min-vh-100\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"min-vh-100\"], [1, \"col-md-9\", \"card\", \"mx-auto\", \"d-flex\", \"flex-row\", \"px-0\"], [1, \"row\"], [1, \"col-7\", \"d-md-flex\", \"d-none\", \"p-0\", \"m-0\"], [\"src\", \"assets/elabd.jpg\", 1, \"w-100\"], [1, \"card-body\", \"col-5\", \"d-flex\", \"flex-column\", \"justify-content-center\", \"p-0\", \"m-0\", 2, \"background-color\", \"rgb(95, 201, 217)\"], [1, \"title\", \"text-center\", \"fs-1\", \"mt-4\", \"pb-3\", \"text-white\"], [2, \"color\", \"rgb(245, 145, 178)\"], [1, \"col-sm-10\", \"col-12\", \"mx-auto\", 3, \"formGroup\"], [1, \"form-group\"], [\"type\", \"Email\", \"formControlName\", \"Email\", \"placeholder\", \"example@gmail.com\", 1, \"form-control\"], [1, \"form-group\", \"py-3\"], [\"type\", \"password\", \"formControlName\", \"Password\", \"placeholder\", \"***\", 1, \"form-control\"], [1, \"\"], [\"type\", \"button\", \"value\", \"Login\", 1, \"btn\", \"d-block\", \"w-100\", 3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"h4\", 7);\n        i0.ɵɵtext(8, \" Dashboard \");\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"form\", 9)(12, \"div\", 10);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵelement(15, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"input\", 15);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_input_click_17_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.Email == null ? null : ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && !(ctx.Email == null ? null : ctx.Email.untouched))(\"is-valid\", ctx.Email == null ? null : ctx.Email.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.Password == null ? null : ctx.Password.errors == null ? null : ctx.Password.errors[\"required\"]) && !(ctx.Password == null ? null : ctx.Password.untouched))(\"is-valid\", ctx.Password == null ? null : ctx.Password.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".divider[_ngcontent-%COMP%]:after, .divider[_ngcontent-%COMP%]:before{content:\\\"\\\";flex:1;height:1px;background:#eee}.h-custom[_ngcontent-%COMP%]{height:calc(100% - 73px)}@media (max-width: 450px){.h-custom[_ngcontent-%COMP%]{height:100%}}.loginbtn[_ngcontent-%COMP%]{background-color:#000}body[_ngcontent-%COMP%]{height:100vh;display:flex;flex-direction:column;justify-content:center;align-items:center}.card[_ngcontent-%COMP%]{overflow:hidden;border-radius:10px;min-height:500px;border:none}.btn[_ngcontent-%COMP%]{background-color:#f9bbd0;border:none}.btn[_ngcontent-%COMP%]:hover{background-color:#f9bbd0}input[type=email][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{border-radius:100px;border:none}input[type=button][_ngcontent-%COMP%]{border-radius:100px}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}