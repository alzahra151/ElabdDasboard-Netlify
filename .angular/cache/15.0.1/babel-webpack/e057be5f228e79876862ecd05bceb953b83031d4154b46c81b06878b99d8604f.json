{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/api.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-bootstrap/tabs\";\nfunction AddProductComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.CatEnName);\n  }\n}\nfunction AddProductComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r3._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.SubCat.EnsubCatName);\n  }\n}\nexport class AddProductComponent {\n  constructor(formBulider, api) {\n    this.api = api;\n    this.newProduct = {};\n    this.AvailableSelectSubCat = true;\n    this.avilable = true;\n    this.AddProductForm = formBulider.group({\n      EnName: ['', [Validators.required, Validators.pattern('[A-Za-z ]+')]],\n      ArName: ['', [Validators.required, Validators.pattern('[\\u0621-\\u064A ]+')]],\n      Image: ['', [Validators.required]],\n      Price: ['', [Validators.required, Validators.pattern('[0-9]+')]],\n      Amount: ['', [Validators.required, Validators.pattern('[0-9]+')]],\n      CategorieID: ['', [Validators.required]],\n      SubCategID: ['', [Validators.required]]\n    });\n  }\n  get EnName() {\n    return this.AddProductForm.get('EnName');\n  }\n  get ArName() {\n    return this.AddProductForm.get('ArName');\n  }\n  get Image() {\n    return this.AddProductForm.get('Image');\n  }\n  get Price() {\n    return this.AddProductForm.get('Price');\n  }\n  get CategorieID() {\n    return this.AddProductForm.get('CategorieID');\n  }\n  get SubCategID() {\n    return this.AddProductForm.get('SubCategID');\n  }\n  get Amount() {\n    return this.AddProductForm.get('Amount');\n  }\n  readExcel(event) {\n    let file = event.target.files[0];\n    let fileReader = new FileReader();\n    fileReader.readAsBinaryString(file);\n    fileReader.onload = e => {\n      var workBook = XLSX.read(fileReader.result, {\n        type: 'binary'\n      });\n      var sheetNames = workBook.SheetNames;\n      this.ExcelData = XLSX.utils.sheet_to_json(workBook.Sheets[sheetNames[0]]);\n    };\n  }\n  AddProductExcel() {\n    if (this.ExcelData) {\n      for (const item of this.ExcelData) {\n        const product = {\n          EnName: item.EnName,\n          ArName: item.ArName,\n          Image: {\n            url: item.Image\n          },\n          Amount: item.Amount,\n          Price: item.Price,\n          CategorieID: this.listOfCat.find(data => {\n            return item.CategorieID === data.CatEnName;\n          })?._id,\n          SubCategID: this.sublist.find(data => {\n            return data.EnsubCatName === item.SubCategorieID;\n          })?._id\n        };\n        this.api.post('Product', product).subscribe({\n          next: data => {\n            Swal.fire({\n              icon: 'success',\n              title: 'Done...',\n              text: 'Product Added Successfully'\n            });\n          },\n          error: err => {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Incorrect Infromation Try Again'\n            });\n          }\n        });\n      }\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Upload File First'\n      });\n    }\n  }\n  ngOnInit() {\n    this.GetAllCat();\n    this.GetSubCat();\n  }\n  GetAllCat() {\n    this.api.get('Categorie').subscribe({\n      next: data => {\n        this.listOfCat = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  GetAllSubCat(id) {\n    const selectCat = this.listOfCat.filter(item => item._id === id);\n    this.listOfSubcat = selectCat[0].SubCategorieID;\n  }\n  GetSubCat() {\n    this.api.get('SubCategorie').subscribe({\n      next: data => {\n        this.sublist = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  AddProduct() {\n    let {\n      EnName,\n      ArName,\n      Price,\n      CategorieID,\n      SubCategID,\n      Amount\n    } = this.AddProductForm.value;\n    let Product = new FormData();\n    if (SubCategID === '') {\n      Product.append(\"EnName\", EnName);\n      Product.append(\"ArName\", ArName);\n      Product.append(\"Price\", Price);\n      Product.append(\"CategorieID\", CategorieID);\n      Product.append(\"Amount\", Amount);\n      Product.append(\"Image\", this.ImageFile);\n    } else {\n      Product.append(\"SubCategID\", SubCategID);\n      Product.append(\"EnName\", EnName);\n      Product.append(\"ArName\", ArName);\n      Product.append(\"Price\", Price);\n      Product.append(\"CategorieID\", CategorieID);\n      Product.append(\"Amount\", Amount);\n      Product.append(\"Image\", this.ImageFile);\n    }\n    this.api.addProduct('Product/UploadProduct', Product).subscribe({\n      next: data => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Done...',\n          text: 'Products Added Successfully'\n        });\n      },\n      error: err => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Incorrect Infromation Try Again'\n        });\n      }\n    });\n  }\n  SelectSubCat(event) {\n    let id = event.target.value;\n    this.GetAllSubCat(id);\n  }\n  OnUpload(event) {\n    this.ImageFile = event.target.files[0];\n  }\n  static #_ = this.ɵfac = function AddProductComponent_Factory(t) {\n    return new (t || AddProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddProductComponent,\n    selectors: [[\"app-add-product\"]],\n    decls: 83,\n    vars: 23,\n    consts: [[\"heading\", \"Add One Product\", \"customClass\", \"\"], [1, \"col-12\", \"flex-fill\", \"container\", \"addProd\", \"pt-4\", \"m-lg-auto\", \"m-0\"], [3, \"formGroup\"], [1, \"row\", \"mb-4\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter Product Title In English\", \"formControlName\", \"EnName\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Enter Product Title In Arabic\", \"formControlName\", \"ArName\", 1, \"form-control\"], [\"type\", \"number\", \"placeholder\", \"Enter Product Price\", \"formControlName\", \"Price\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"phone\", \"placeholder\", \"Enter Product Quentity\", \"formControlName\", \"Amount\", 1, \"form-control\"], [\"for\", \"phone\"], [\"aria-label\", \"Default select example2\", \"formControlName\", \"CategorieID\", 1, \"form-select\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"SubCategID\", 1, \"form-select\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"file\", \"placeholder\", \"Upload Your Image\", \"accept\", \".jpg,.png,.jpeg\", 1, \"form-control\", 3, \"change\"], [1, \"d-flex\", \"align-items-end\", \"justify-content-end\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", \"type\", \"submit\", 1, \"btn\", \"addprodbtn\", \"m-3\", \"btn-lg\"], [\"heading\", \"Add Products Exell\"], [1, \"col\", \"m-auto\", \"p-5\", \"exellFile\", \"mb-5\"], [\"for\", \"formFile\"], [\"type\", \"file\", \"accept\", \".xlsx\", 1, \"form-control\", \"w-75\", \"my-2\", 3, \"change\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop2\", 1, \"btn\", \"addprodbtn\", \"px-5\", \"my-5\", \"btn-lg\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\", \"ms-0\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"modal-body\", \"text-center\"], [1, \"text-primary\", \"text-start\", \"fw-bold\", \"me-4\", \"mt-2\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-danger\", \"me-auto\", \"w-25\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", \"w-25\", 3, \"click\"], [\"id\", \"staticBackdrop2\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-body\", \"fs-6\"], [3, \"value\"]],\n    template: function AddProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"tabset\")(2, \"tab\", 0)(3, \"div\", 1)(4, \"form\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5);\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 4)(14, \"div\", 5);\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\", 5);\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 3)(20, \"div\", 4)(21, \"div\", 5)(22, \"label\", 10);\n        i0.ɵɵtext(23, \"Please Select Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 11);\n        i0.ɵɵlistener(\"change\", function AddProductComponent_Template_select_change_24_listener($event) {\n          return ctx.SelectSubCat($event);\n        });\n        i0.ɵɵtemplate(25, AddProductComponent_option_25_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"div\", 5)(28, \"label\", 10);\n        i0.ɵɵtext(29, \"Please Select SubCategory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 13);\n        i0.ɵɵtemplate(31, AddProductComponent_option_31_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(32, \"div\", 3)(33, \"div\", 4)(34, \"div\", 5)(35, \"div\", 14)(36, \"input\", 15);\n        i0.ɵɵlistener(\"change\", function AddProductComponent_Template_input_change_36_listener($event) {\n          return ctx.OnUpload($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(37, \"div\", 16)(38, \"button\", 17);\n        i0.ɵɵtext(39, \"Add Product\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(40, \"tab\", 18)(41, \"div\", 19)(42, \"label\", 20);\n        i0.ɵɵtext(43, \"choose your exell file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"input\", 21);\n        i0.ɵɵlistener(\"change\", function AddProductComponent_Template_input_change_44_listener($event) {\n          return ctx.readExcel($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"button\", 22);\n        i0.ɵɵtext(46, \"Add Collection\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(47, \"div\", 23)(48, \"div\", 24)(49, \"div\", 25)(50, \"div\", 26);\n        i0.ɵɵelement(51, \"button\", 27);\n        i0.ɵɵelementStart(52, \"h1\", 28);\n        i0.ɵɵtext(53, \"Adding New Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"div\", 29);\n        i0.ɵɵtext(55, \" Are You Sure You Want To Add Product To Your Data \");\n        i0.ɵɵelementStart(56, \"p\", 30);\n        i0.ɵɵtext(57);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"p\", 30);\n        i0.ɵɵtext(59);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"p\", 30);\n        i0.ɵɵtext(61);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"p\", 30);\n        i0.ɵɵtext(63);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(64, \"div\", 31)(65, \"button\", 32);\n        i0.ɵɵtext(66, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"button\", 33);\n        i0.ɵɵlistener(\"click\", function AddProductComponent_Template_button_click_67_listener() {\n          return ctx.AddProduct();\n        });\n        i0.ɵɵtext(68, \"Confirm\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(69, \"div\", 34)(70, \"div\", 24)(71, \"div\", 25)(72, \"div\", 26);\n        i0.ɵɵelement(73, \"button\", 27);\n        i0.ɵɵelementStart(74, \"h1\", 28);\n        i0.ɵɵtext(75, \"Adding Collection of Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(76, \"div\", 35);\n        i0.ɵɵtext(77, \" Do You Want To Insert This Collection Of Product To Your Data \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"div\", 31)(79, \"button\", 32);\n        i0.ɵɵtext(80, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"button\", 33);\n        i0.ɵɵlistener(\"click\", function AddProductComponent_Template_button_click_81_listener() {\n          return ctx.AddProductExcel();\n        });\n        i0.ɵɵtext(82, \"Confirm\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.AddProductForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.EnName == null ? null : ctx.EnName.errors == null ? null : ctx.EnName.errors[\"required\"]) && !(ctx.EnName == null ? null : ctx.EnName.untouched))(\"is-valid\", ctx.EnName == null ? null : ctx.EnName.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.ArName == null ? null : ctx.ArName.errors == null ? null : ctx.ArName.errors[\"required\"]) && !(ctx.ArName == null ? null : ctx.ArName.untouched))(\"is-valid\", ctx.ArName == null ? null : ctx.ArName.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.Price == null ? null : ctx.Price.errors == null ? null : ctx.Price.errors[\"required\"]) && !(ctx.Price == null ? null : ctx.Price.untouched))(\"is-valid\", ctx.Price == null ? null : ctx.Price.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.Amount == null ? null : ctx.Amount.errors == null ? null : ctx.Amount.errors[\"required\"]) && !(ctx.Amount == null ? null : ctx.Amount.untouched))(\"is-valid\", ctx.Amount == null ? null : ctx.Amount.valid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfCat);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfSubcat);\n        i0.ɵɵadvance(26);\n        i0.ɵɵtextInterpolate1(\" English Name : \", ctx.AddProductForm.value.EnName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Arabic Name : \", ctx.AddProductForm.value.ArName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Price : \", ctx.AddProductForm.value.Price, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Amount : \", ctx.AddProductForm.value.Amount, \"\");\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.TabDirective, i4.TabsetComponent],\n    styles: [\".addProd[_ngcontent-%COMP%]{background-color:#fff}.tabs[_ngcontent-%COMP%]:active{color:red}.addprodbtn[_ngcontent-%COMP%]{background-color:#6f3c2e;color:#fff}.table-color[_ngcontent-%COMP%]{background-color:#fff}.img[_ngcontent-%COMP%]{width:80px;height:80px}.productsTable[_ngcontent-%COMP%], .exellFile[_ngcontent-%COMP%]{background-color:#fff}[_nghost-%COMP%]     tabset a{color:#000!important}[_nghost-%COMP%]     tabset a .nav-link{background:#ffffff;border:1px solid #dde6fb;border-radius:4px;font-family:Open Sans,sans-serif;font-style:normal;font-weight:400;font-size:14px;line-height:22px;text-align:center;color:#000!important}[_nghost-%COMP%]     tabset a.active{color:#f6b0ab!important}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}