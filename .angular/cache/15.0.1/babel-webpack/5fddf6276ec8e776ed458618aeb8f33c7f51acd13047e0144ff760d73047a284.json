{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ApiService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n  }\n  get(path, config) {\n    return this.httpClient.get(environment.apiUrl + path, {\n      ...config,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'token': `token ${this.getToken()}`\n      })\n    });\n  }\n  post(path, body, config) {\n    return this.httpClient.post(environment.apiUrl + path, body, {\n      ...config,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'token': `token ${this.getToken()}`\n      })\n    });\n  }\n  addProduct(path, body, config) {\n    return this.httpClient.post(environment.apiUrl + path, body, {\n      ...config,\n      headers: new HttpHeaders({\n        'encType': \"multipart/form-data\",\n        'token': `token ${this.getToken()}`\n      })\n    });\n  }\n  put(path, body, config) {\n    return this.httpClient.put(environment.apiUrl + path, body, {\n      ...config,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'token': `token ${this.getToken()}`\n      })\n    });\n  }\n  delete(path, config) {\n    return this.httpClient.delete(environment.apiUrl + path, {\n      ...config,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'token': `token ${this.getToken()}`\n      })\n    });\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}