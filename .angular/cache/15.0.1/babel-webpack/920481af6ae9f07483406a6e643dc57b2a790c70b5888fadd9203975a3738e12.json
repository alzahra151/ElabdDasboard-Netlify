{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.userInfo = {};\n    this.userValidate = true;\n    this.isLogged = new BehaviorSubject(this.isUserLogged);\n    const Token = JSON.parse(localStorage.getItem('Token') || '{}');\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Token': `token ${Token}`\n      })\n    };\n  }\n  adminLogin(user) {\n    this.httpClient.post(`${environment.apiUrl}/User/Login`, user).subscribe(res => {\n      localStorage.setItem('Token', JSON.stringify(res.AccessToken));\n      localStorage.setItem('user', JSON.stringify(res));\n      this.userInfo = res;\n      // this.isLogged.next(true)\n      this.router.navigate([\"/\"]);\n    });\n  }\n  logout(userId) {\n    return this.httpClient.get(`${environment.apiUrl}/User/Logout/${userId}`, this.httpOptions);\n  }\n  get isUserLogged() {\n    return localStorage.getItem('Token') ? true : false;\n  }\n  getLoggedStatus() {\n    return this.isLogged.asObservable();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}